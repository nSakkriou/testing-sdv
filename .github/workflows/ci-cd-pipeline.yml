name: CI/CD Frontend Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.9.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build --prod

  test_and_release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image (single-arch for testing)
        run: |
          docker build -t nsakkriou/sdv-testing-front:test-image .

      - name: Run Docker container for testing
        run: |
          docker run -d --name front-test-container -p 8080:80 nsakkriou/sdv-testing-front:test-image
          sleep 10 # Attendre que le container soit prÃªt

      - name: Run tests on the running container
        run: ./test.sh

      - name: Stop and remove Docker container
        run: |
          docker stop front-test-container
          docker rm front-test-container

      - name: Build and push multi-architecture Docker image if tests pass
        if: success()
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: nsakkriou/sdv-testing-front:latest
          platforms: linux/amd64,linux/arm64

      - name: Notify a new version is ready
        if: success()
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'http://nathansakkriou.com/version/update'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"newVersion": "TEST OK ! NEW Version pour le front"}'

      - name: Cleanup Docker resources
        if: always()
        run: |
          docker rmi nsakkriou/sdv-testing-front:test-image
